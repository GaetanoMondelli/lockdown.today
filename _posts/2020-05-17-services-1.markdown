---
layout: default
type: large
title: Getting started with no pain

description: |
---
---


### ðŸ’¿ Install Solitude

Let's install solitude from its repository.
We recommend to use a [virtual environment](https://docs.python.org/3/library/venv.html)

```bash
python3 -m venv myenv
source myenv/bin/activate
pip install git+https://github.com/incerto-crypto/solitude.git
```
ðŸªŸ On Windows make sure you have installed:

 - [Visual C++ Build Tools 2015](https://www.microsoft.com/en-us/download/details.aspx?id=48159)
 - [pwin32 in your vritual environement](https://pypi.org/project/pywin32/)

---
### ðŸ†• Create a new project
Solitude comes with an handy CLI.

Running `solitude init` in your project folder will create a default `solitude.yaml` configuration file.

```bash
mkdir -p path/to/MyProject
cd path/to/MyProject
solitude init
```
---

ðŸ’» Other CLI commands are:

- *install*: install all the required tools configured in the `solitude.yaml`
- *compile*: compile all the smart contracts in the `Project.SourceDir` field of the `solitude.yaml`
- *debug*: given a transactionHash starts an interactive gdb like debugger against the the ethereum node at `Client.Endpoint` in the `solitude.yaml` 
- *trace*: given a valid transaction hash in the etehreum node reachable at  `Client.Endpoint` returns trace info (frames, stack, memory and storage)
- *lint*: runs the solidity linter (for example EthLint Version `Tools.EthLint.Version`) against the contracts in `Project.SourceDir`.
- *server*: runs a Ganache version: `Tools.GanacheCli.Version` at `Server.Host` : `Server.Port`


 ### ðŸ†• Run an existing project

 Usually to run the first time a solitude project you need to `install` the required tools and `compile` the contracts from the `Project.SourceDir` into the 
 `Project.ObjectDir` directory.  

```bash
cd path/to/MyProject
solitude install
solitude compile
```
---

You need to install the required tools and to compile your contracts everytime you update them.
For example the [solitude\_examples/e01\_cat\_shelter](https://github.com/incerto-crypto/solitude-examples/tree/master/examples/e01_cat_shelter) in the example respository defines the congifuration file as follows:

```
- Project.SourceDir: .
- Project.ObjectDir: ./build
- Tools.Directory: ~/.solitude-dev
- Tools.Required:
  - Solc
  - GanacheCli
- Tools.Solc.Version: 0.5.2
- Tools.GanacheCli.Version: 6.4.1
```

Running `solitude compile` the tool will make sure Solc and GanacheCli of the desired versions are installed in `~/.solitude-dev`.

Running `solitude install` it will compile all the contracts (`*.sol`) in current directory `.` (in this case only `CatShelter.sol`) creating the object json in the project sub folder `build`.  

Finally the example shows hot to write tests in python  for checking the corretness of the contract. We explain how the solitude framework can be integrated with python testing tools in the Testing with Solitude section.